{"version":3,"file":"static/js/457.920aede9.chunk.js","mappings":"iRAEaA,EAAiBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+KAC1B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAGpB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,QAAQC,UAAU,IAC5B,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,EAAE,IAIxB,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAG1BK,EAAiBV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+DAK3BU,EAAcZ,EAAAA,GAAAA,GAASa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6EAChB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IACV,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,I,SCZ3CS,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAACrB,EAAc,CAAAsB,SACZN,EAASO,KAAI,SAAAC,GACZ,OACEH,EAAAA,EAAAA,KAACR,EAAW,CAAAS,UACVG,EAAAA,EAAAA,MAACd,EAAc,CAAAW,SAAA,EACbG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CACGE,EAAQE,KAAK,KAAGF,EAAQG,WAE3BN,EAAAA,EAAAA,KAAA,UACEO,QAAS,WAdF,IAAAC,IAeQL,EAAQK,GAdnCV,GAASW,EAAAA,EAAAA,IAAcD,GAeX,EAAEP,SACH,eATaE,EAAQK,GAe9B,KAGN,E,oBChCaE,GAAO9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAkBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wNAMzB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAC3B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IACb,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,EAAE,IAClB,SAAAN,GAAC,OAAIA,EAAEC,MAAM4B,OAAOC,aAAa,IACvC,SAAA9B,GAAC,OAAIA,EAAEC,MAAME,QAAQC,UAAU,IAGlC2B,GAAQlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAmBW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2DACrB,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,EAAE,IAClB,SAAAN,GAAC,OAAIA,EAAEC,MAAM4B,OAAOI,WAAW,IAGxCC,EAAiBrC,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,+DAK3BoC,EAAkBtC,EAAAA,GAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,uDAK5BsC,GAAexC,EAAAA,EAAAA,IAAOyC,EAAAA,GAAPzC,CAAmB0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,yBACpC,SAAAC,GAAC,OAAIA,EAAEC,MAAM4B,OAAOW,UAAU,ICtB5BC,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,IAAY6B,EAAAA,IACvB3B,GAAWC,EAAAA,EAAAA,MAaX2B,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CvB,KAAMsB,EAAAA,KACHE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZzB,OAAQqB,EAAAA,KACLE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGd,OACE/B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACgC,EAAAA,GAAM,CACLC,cAAe,CACb5B,KAAM,GACNC,OAAQ,IAEV4B,iBAAkBR,EAClBS,SAAU,SAACC,EAAQC,IA9BP,SAAAC,GAChB,IAAMC,EAAmB5C,EAAS6C,MAChC,SAAArC,GAAO,OAAIA,EAAQE,KAAKoC,gBAAkBH,EAAWjC,KAAKoC,aAAa,IAEzE,QAAyBC,IAArBH,EACF,OAAOI,MAAM,GAADC,OAAIL,EAAiBlC,KAAI,4BAErCP,GAAS+C,EAAAA,EAAAA,IAAWP,GAExB,CAsBQQ,CAAUV,GACVC,EAAQU,WACV,EAAE9C,UAEFG,EAAAA,EAAAA,MAACM,EAAI,CAAAT,SAAA,EACHG,EAAAA,EAAAA,MAACa,EAAc,CAAAhB,SAAA,EACbD,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,OAAM/C,SAAC,UACtBG,EAAAA,EAAAA,MAACc,EAAe,CAAAjB,SAAA,EACdD,EAAAA,EAAAA,KAACc,EAAK,CAACN,GAAG,OAAOH,KAAK,OAAO4C,YAAY,UACzCjD,EAAAA,EAAAA,KAACoB,EAAY,CAACf,KAAK,OAAO6C,UAAU,gBAIxC9C,EAAAA,EAAAA,MAACa,EAAc,CAAAhB,SAAA,EACbD,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,SAAQ/C,SAAC,YACxBG,EAAAA,EAAAA,MAACc,EAAe,CAAAjB,SAAA,EACdD,EAAAA,EAAAA,KAACc,EAAK,CAACN,GAAG,SAASH,KAAK,SAAS4C,YAAY,aAC7CjD,EAAAA,EAAAA,KAACoB,EAAY,CAACf,KAAK,SAAS6C,UAAU,gBAI1ClD,EAAAA,EAAAA,KAAA,UAAQmD,KAAK,SAAQlD,SAAC,sBAKhC,ECzEamD,EAAMxE,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uJASlBuE,EAAczE,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wIACvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAEpB,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,EAAE,IAClB,SAAAN,GAAC,OAAIA,EAAEC,MAAM4B,OAAOI,WAAW,I,UCXxCsC,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpB1D,GAAWC,EAAAA,EAAAA,MAMjB,OACEK,EAAAA,EAAAA,MAACgD,EAAG,CAACJ,QAAQ,SAAQ/C,SAAA,CAAC,yBAEpBD,EAAAA,EAAAA,KAACqD,EAAW,CACVF,KAAK,OACLM,MAAOD,EACPE,SAAU,SAAAC,GAVO,IAAAC,IAWAD,EAAIE,OAAOJ,MAVhC3D,GAASgE,EAAAA,EAAAA,GAAaF,GAWlB,EACAvD,KAAK,aAIb,ECfe,SAAS0D,IACtB,IAAMjE,GAAWC,EAAAA,EAAAA,MACXiE,GAAYpE,EAAAA,EAAAA,IAAYqE,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACRpE,GAASqE,EAAAA,EAAAA,MACX,GAAG,CAACrE,KAGFM,EAAAA,EAAAA,MAAAgE,EAAAA,SAAA,CAAAnE,SAAA,EACED,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CAAApE,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,qBAETD,EAAAA,EAAAA,KAACwB,EAAW,KACZxB,EAAAA,EAAAA,KAACsD,EAAS,KACVtD,EAAAA,EAAAA,KAAA,OAAAC,SAAM+D,GAAa,4BACnBhE,EAAAA,EAAAA,KAACN,EAAW,MAGlB,C","sources":["components/Contacts/ContactList.styled.js","components/Contacts/ContactList.js","components/phoneForm/NewPhoneForm.styled.js","components/phoneForm/NewPhoneForm.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListOfContacts = styled.ul`\n  padding: ${p => p.theme.spasing(4)};\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: ${p => p.theme.shadows.formShadow};\n  border-radius: ${p => p.theme.radii.sd};\n\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: ${p => p.theme.spasing(7)};\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactItem = styled.li`\n  padding-bottom: ${p => p.theme.spasing(4)};\n  flex-basis: calc((100% - 2 * ${p => p.theme.spasing(7)}) / 3);\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { visibleContacts } from '../../redux/selectors';\nimport {\n  ListOfContacts,\n  ContactItem,\n  ContactWrapper,\n} from './ContactList.styled';\nimport { deleteContact } from '../../redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(visibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListOfContacts>\n      {contacts.map(contact => {\n        return (\n          <ContactItem key={contact.id}>\n            <ContactWrapper>\n              <p>\n                {contact.name}: {contact.number}\n              </p>\n              <button\n                onClick={() => {\n                  handleDelete(contact.id);\n                }}\n              >\n                Delete\n              </button>\n            </ContactWrapper>\n          </ContactItem>\n        );\n      })}\n    </ListOfContacts>\n  );\n};\n","import {\n  Form as FormikForm,\n  Field as FormicField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.spasing(4)};\n  gap: ${p => p.theme.spasing(4)};\n  border-radius: ${p => p.theme.radii.sd};\n  background-color: ${p => p.theme.colors.mainFormColor};\n  box-shadow: ${p => p.theme.shadows.formShadow};\n`;\n\nexport const Field = styled(FormicField)`\n  border-radius: ${p => p.theme.radii.sd};\n  border: 1px solid ${p => p.theme.colors.borderColor};\n`;\n\nexport const FormInputGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const InputErrorGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.errorColor};\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Form,\n  FormInputGroup,\n  Field,\n  ErrorMessage,\n  InputErrorGroup,\n} from './NewPhoneForm.styled';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nexport const FormContact = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAdd = newContact => {\n    const duplicateContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (duplicateContact !== undefined) {\n      return alert(`${duplicateContact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  const PhoneValidateSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Required'),\n    number: Yup.string()\n      .min(7, 'Too Short!')\n      .max(12, 'Too Long!')\n      .required('Required'),\n  });\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={PhoneValidateSchema}\n        onSubmit={(values, actions) => {\n          handleAdd(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormInputGroup>\n            <label htmlFor=\"name\">Name</label>\n            <InputErrorGroup>\n              <Field id=\"name\" name=\"name\" placeholder=\"Luna\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </InputErrorGroup>\n          </FormInputGroup>\n\n          <FormInputGroup>\n            <label htmlFor=\"number\">Number</label>\n            <InputErrorGroup>\n              <Field id=\"number\" name=\"number\" placeholder=\"1234567\" />\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </InputErrorGroup>\n          </FormInputGroup>\n\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Bar = styled.label`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilterField = styled.input`\n  margin-top: ${p => p.theme.spasing(4)};\n  width: 200px;\n  border-radius: ${p => p.theme.radii.sd};\n  border: 1px solid ${p => p.theme.colors.borderColor};\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Bar, FilterField } from './SearchBar.styled';\nimport { changeFilter } from '../../redux/filterSlise';\n\nexport const SearchBar = ({ filter }) => {\n  const dispatch = useDispatch();\n\n  const filterContacts = filterValue => {\n    dispatch(changeFilter(filterValue));\n  };\n\n  return (\n    <Bar htmlFor=\"filter\">\n      Find contacts by name\n      <FilterField\n        type=\"text\"\n        value={filter}\n        onChange={evt => {\n          filterContacts(evt.target.value);\n        }}\n        name=\"filter\"\n      />\n    </Bar>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from '../../redux/operations';\nimport { selectIsLoading } from '../../redux/selectors';\nimport { ContactList } from '../../components/Contacts/ContactList';\nimport { FormContact } from '../../components/phoneForm/NewPhoneForm';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <FormContact />\n      <SearchBar />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ListOfContacts","styled","_templateObject","_taggedTemplateLiteral","p","theme","spasing","shadows","formShadow","radii","sd","ContactWrapper","_templateObject2","ContactItem","_templateObject3","ContactList","contacts","useSelector","visibleContacts","dispatch","useDispatch","_jsx","children","map","contact","_jsxs","name","number","onClick","id","deleteContact","Form","FormikForm","colors","mainFormColor","Field","FormicField","borderColor","FormInputGroup","InputErrorGroup","_templateObject4","ErrorMessage","FormikError","_templateObject5","errorColor","FormContact","selectContacts","PhoneValidateSchema","Yup","shape","min","max","required","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","duplicateContact","find","toLowerCase","undefined","alert","concat","addContact","handleAdd","resetForm","htmlFor","placeholder","component","type","Bar","FilterField","SearchBar","_ref","filter","value","onChange","evt","filterValue","target","changeFilter","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}